Grammar

    0 $accept: IR_globol $end

    1 IR_globol: MUL_EOL IR_program

    2 IR_program: IR_program IR_function
    3           | %empty

    4 IR_function: FUNCTION ID COLON EOL
    5            | IR_function PARAM IR_var EOL
    6            | IR_function DEC IR_var INT EOL
    7            | IR_function ARG IR_val_rs EOL
    8            | IR_function LABEL IR_label COLON EOL
    9            | IR_function IR_stmt EOL

   10 IR_stmt: IR_var ASSIGN IR_val
   11        | IR_var ASSIGN val_deref
   12        | val_deref ASSIGN IR_val_rs
   13        | IR_var ASSIGN IR_val_rs OP IR_val_rs
   14        | IR_var ASSIGN IR_val_rs STAR IR_val_rs
   15        | GOTO IR_label
   16        | IF IR_val_rs RELOP IR_val_rs GOTO IR_label
   17        | RETURN IR_val
   18        | IR_var ASSIGN CALL ID
   19        | READ IR_var
   20        | WRITE IR_val_rs

   21 IR_val: IR_var
   22       | SHARP INT
   23       | ADDR_OF IR_var

   24 val_deref: STAR IR_val

   25 IR_val_rs: IR_val
   26          | val_deref

   27 IR_var: ID

   28 IR_label: ID

   29 MUL_EOL: MUL_EOL EOL
   30        | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    EOL (258) 4 5 6 7 8 9 29
    COLON (259) 4 8
    FUNCTION (260) 4
    LABEL (261) 8
    SHARP (262) 22
    INT <INT> (263) 6 22
    ASSIGN (264) 10 11 12 13 14 18
    STAR <IR_op_type> (265) 14 24
    OP <IR_op_type> (266) 13
    IF (267) 16
    RELOP <IR_relop_type> (268) 16
    ADDR_OF (269) 23
    GOTO (270) 15 16
    RETURN (271) 17
    DEC (272) 6
    ARG (273) 7
    CALL (274) 18
    PARAM (275) 5
    READ (276) 19
    WRITE (277) 20
    ID <id> (278) 4 18 27 28


Nonterminals, with rules where they appear

    $accept (24)
        on left: 0
    IR_globol <IR_program_ptr_node> (25)
        on left: 1
        on right: 0
    IR_program <IR_program_ptr_node> (26)
        on left: 2 3
        on right: 1 2
    IR_function <IR_function_ptr_node> (27)
        on left: 4 5 6 7 8 9
        on right: 2 5 6 7 8 9
    IR_stmt <IR_stmt_ptr_node> (28)
        on left: 10 11 12 13 14 15 16 17 18 19 20
        on right: 9
    IR_val <IR_val_node> (29)
        on left: 21 22 23
        on right: 10 17 24 25
    val_deref <IR_val_node> (30)
        on left: 24
        on right: 11 12 26
    IR_val_rs <IR_val_node> (31)
        on left: 25 26
        on right: 7 12 13 14 16 20
    IR_var <IR_var_node> (32)
        on left: 27
        on right: 5 6 10 11 13 14 18 19 21 23
    IR_label <IR_label_node> (33)
        on left: 28
        on right: 8 15 16
    MUL_EOL (34)
        on left: 29 30
        on right: 1 29


State 0

    0 $accept: . IR_globol $end

    $default  reduce using rule 30 (MUL_EOL)

    IR_globol  go to state 1
    MUL_EOL    go to state 2


State 1

    0 $accept: IR_globol . $end

    $end  shift, and go to state 3


State 2

    1 IR_globol: MUL_EOL . IR_program
   29 MUL_EOL: MUL_EOL . EOL

    EOL  shift, and go to state 4

    $default  reduce using rule 3 (IR_program)

    IR_program  go to state 5


State 3

    0 $accept: IR_globol $end .

    $default  accept


State 4

   29 MUL_EOL: MUL_EOL EOL .

    $default  reduce using rule 29 (MUL_EOL)


State 5

    1 IR_globol: MUL_EOL IR_program .
    2 IR_program: IR_program . IR_function

    FUNCTION  shift, and go to state 6

    $default  reduce using rule 1 (IR_globol)

    IR_function  go to state 7


State 6

    4 IR_function: FUNCTION . ID COLON EOL

    ID  shift, and go to state 8


State 7

    2 IR_program: IR_program IR_function .
    5 IR_function: IR_function . PARAM IR_var EOL
    6            | IR_function . DEC IR_var INT EOL
    7            | IR_function . ARG IR_val_rs EOL
    8            | IR_function . LABEL IR_label COLON EOL
    9            | IR_function . IR_stmt EOL

    LABEL   shift, and go to state 9
    STAR    shift, and go to state 10
    IF      shift, and go to state 11
    GOTO    shift, and go to state 12
    RETURN  shift, and go to state 13
    DEC     shift, and go to state 14
    ARG     shift, and go to state 15
    PARAM   shift, and go to state 16
    READ    shift, and go to state 17
    WRITE   shift, and go to state 18
    ID      shift, and go to state 19

    $default  reduce using rule 2 (IR_program)

    IR_stmt    go to state 20
    val_deref  go to state 21
    IR_var     go to state 22


State 8

    4 IR_function: FUNCTION ID . COLON EOL

    COLON  shift, and go to state 23


State 9

    8 IR_function: IR_function LABEL . IR_label COLON EOL

    ID  shift, and go to state 24

    IR_label  go to state 25


State 10

   24 val_deref: STAR . IR_val

    SHARP    shift, and go to state 26
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val  go to state 28
    IR_var  go to state 29


State 11

   16 IR_stmt: IF . IR_val_rs RELOP IR_val_rs GOTO IR_label

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 32
    IR_var     go to state 29


State 12

   15 IR_stmt: GOTO . IR_label

    ID  shift, and go to state 24

    IR_label  go to state 33


State 13

   17 IR_stmt: RETURN . IR_val

    SHARP    shift, and go to state 26
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val  go to state 34
    IR_var  go to state 29


State 14

    6 IR_function: IR_function DEC . IR_var INT EOL

    ID  shift, and go to state 19

    IR_var  go to state 35


State 15

    7 IR_function: IR_function ARG . IR_val_rs EOL

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 36
    IR_var     go to state 29


State 16

    5 IR_function: IR_function PARAM . IR_var EOL

    ID  shift, and go to state 19

    IR_var  go to state 37


State 17

   19 IR_stmt: READ . IR_var

    ID  shift, and go to state 19

    IR_var  go to state 38


State 18

   20 IR_stmt: WRITE . IR_val_rs

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 39
    IR_var     go to state 29


State 19

   27 IR_var: ID .

    $default  reduce using rule 27 (IR_var)


State 20

    9 IR_function: IR_function IR_stmt . EOL

    EOL  shift, and go to state 40


State 21

   12 IR_stmt: val_deref . ASSIGN IR_val_rs

    ASSIGN  shift, and go to state 41


State 22

   10 IR_stmt: IR_var . ASSIGN IR_val
   11        | IR_var . ASSIGN val_deref
   13        | IR_var . ASSIGN IR_val_rs OP IR_val_rs
   14        | IR_var . ASSIGN IR_val_rs STAR IR_val_rs
   18        | IR_var . ASSIGN CALL ID

    ASSIGN  shift, and go to state 42


State 23

    4 IR_function: FUNCTION ID COLON . EOL

    EOL  shift, and go to state 43


State 24

   28 IR_label: ID .

    $default  reduce using rule 28 (IR_label)


State 25

    8 IR_function: IR_function LABEL IR_label . COLON EOL

    COLON  shift, and go to state 44


State 26

   22 IR_val: SHARP . INT

    INT  shift, and go to state 45


State 27

   23 IR_val: ADDR_OF . IR_var

    ID  shift, and go to state 19

    IR_var  go to state 46


State 28

   24 val_deref: STAR IR_val .

    $default  reduce using rule 24 (val_deref)


State 29

   21 IR_val: IR_var .

    $default  reduce using rule 21 (IR_val)


State 30

   25 IR_val_rs: IR_val .

    $default  reduce using rule 25 (IR_val_rs)


State 31

   26 IR_val_rs: val_deref .

    $default  reduce using rule 26 (IR_val_rs)


State 32

   16 IR_stmt: IF IR_val_rs . RELOP IR_val_rs GOTO IR_label

    RELOP  shift, and go to state 47


State 33

   15 IR_stmt: GOTO IR_label .

    $default  reduce using rule 15 (IR_stmt)


State 34

   17 IR_stmt: RETURN IR_val .

    $default  reduce using rule 17 (IR_stmt)


State 35

    6 IR_function: IR_function DEC IR_var . INT EOL

    INT  shift, and go to state 48


State 36

    7 IR_function: IR_function ARG IR_val_rs . EOL

    EOL  shift, and go to state 49


State 37

    5 IR_function: IR_function PARAM IR_var . EOL

    EOL  shift, and go to state 50


State 38

   19 IR_stmt: READ IR_var .

    $default  reduce using rule 19 (IR_stmt)


State 39

   20 IR_stmt: WRITE IR_val_rs .

    $default  reduce using rule 20 (IR_stmt)


State 40

    9 IR_function: IR_function IR_stmt EOL .

    $default  reduce using rule 9 (IR_function)


State 41

   12 IR_stmt: val_deref ASSIGN . IR_val_rs

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 51
    IR_var     go to state 29


State 42

   10 IR_stmt: IR_var ASSIGN . IR_val
   11        | IR_var ASSIGN . val_deref
   13        | IR_var ASSIGN . IR_val_rs OP IR_val_rs
   14        | IR_var ASSIGN . IR_val_rs STAR IR_val_rs
   18        | IR_var ASSIGN . CALL ID

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    CALL     shift, and go to state 52
    ID       shift, and go to state 19

    IR_val     go to state 53
    val_deref  go to state 54
    IR_val_rs  go to state 55
    IR_var     go to state 29


State 43

    4 IR_function: FUNCTION ID COLON EOL .

    $default  reduce using rule 4 (IR_function)


State 44

    8 IR_function: IR_function LABEL IR_label COLON . EOL

    EOL  shift, and go to state 56


State 45

   22 IR_val: SHARP INT .

    $default  reduce using rule 22 (IR_val)


State 46

   23 IR_val: ADDR_OF IR_var .

    $default  reduce using rule 23 (IR_val)


State 47

   16 IR_stmt: IF IR_val_rs RELOP . IR_val_rs GOTO IR_label

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 57
    IR_var     go to state 29


State 48

    6 IR_function: IR_function DEC IR_var INT . EOL

    EOL  shift, and go to state 58


State 49

    7 IR_function: IR_function ARG IR_val_rs EOL .

    $default  reduce using rule 7 (IR_function)


State 50

    5 IR_function: IR_function PARAM IR_var EOL .

    $default  reduce using rule 5 (IR_function)


State 51

   12 IR_stmt: val_deref ASSIGN IR_val_rs .

    $default  reduce using rule 12 (IR_stmt)


State 52

   18 IR_stmt: IR_var ASSIGN CALL . ID

    ID  shift, and go to state 59


State 53

   10 IR_stmt: IR_var ASSIGN IR_val .
   25 IR_val_rs: IR_val .

    EOL       reduce using rule 10 (IR_stmt)
    $default  reduce using rule 25 (IR_val_rs)


State 54

   11 IR_stmt: IR_var ASSIGN val_deref .
   26 IR_val_rs: val_deref .

    EOL       reduce using rule 11 (IR_stmt)
    $default  reduce using rule 26 (IR_val_rs)


State 55

   13 IR_stmt: IR_var ASSIGN IR_val_rs . OP IR_val_rs
   14        | IR_var ASSIGN IR_val_rs . STAR IR_val_rs

    STAR  shift, and go to state 60
    OP    shift, and go to state 61


State 56

    8 IR_function: IR_function LABEL IR_label COLON EOL .

    $default  reduce using rule 8 (IR_function)


State 57

   16 IR_stmt: IF IR_val_rs RELOP IR_val_rs . GOTO IR_label

    GOTO  shift, and go to state 62


State 58

    6 IR_function: IR_function DEC IR_var INT EOL .

    $default  reduce using rule 6 (IR_function)


State 59

   18 IR_stmt: IR_var ASSIGN CALL ID .

    $default  reduce using rule 18 (IR_stmt)


State 60

   14 IR_stmt: IR_var ASSIGN IR_val_rs STAR . IR_val_rs

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 63
    IR_var     go to state 29


State 61

   13 IR_stmt: IR_var ASSIGN IR_val_rs OP . IR_val_rs

    SHARP    shift, and go to state 26
    STAR     shift, and go to state 10
    ADDR_OF  shift, and go to state 27
    ID       shift, and go to state 19

    IR_val     go to state 30
    val_deref  go to state 31
    IR_val_rs  go to state 64
    IR_var     go to state 29


State 62

   16 IR_stmt: IF IR_val_rs RELOP IR_val_rs GOTO . IR_label

    ID  shift, and go to state 24

    IR_label  go to state 65


State 63

   14 IR_stmt: IR_var ASSIGN IR_val_rs STAR IR_val_rs .

    $default  reduce using rule 14 (IR_stmt)


State 64

   13 IR_stmt: IR_var ASSIGN IR_val_rs OP IR_val_rs .

    $default  reduce using rule 13 (IR_stmt)


State 65

   16 IR_stmt: IF IR_val_rs RELOP IR_val_rs GOTO IR_label .

    $default  reduce using rule 16 (IR_stmt)
